#!/bin/bash
#############
# License
#############
#
# This file is part of Prompt-Theme.
#
# Promt-Theme is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Promt-Theme is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Promt-Theme.  If not, see <https://www.gnu.org/licenses/>.
#
#############
# References
#############
# - Chris Titus Tech
#   - https://raw.githubusercontent.com/ChrisTitusTech/scripts/master/fancy-bash-promt.sh
# - Andres Gongora
#   - https://github.com/andresgongora/bash-tools
# - WOLFMAN'S color bash prompt
#   - https://wiki.chakralinux.org/index.php?title=Color_Bash_Prompt#Wolfman.27s
# - https://gist.github.com/MicahElliott/719710
# - https://jonasjacek.github.io/colors/
# - Ubuntu's default .bashrc
#############

#### PROMPT_CUSTOMIZATION ####

#color_user_theme=pt-git-nf-blue
#color_user_theme=ctt-default

# Set this for colored tty
#force_color_prompt=yes

# Set Title PWD
#title_pwd="\$(pt_bash_prompt_command)"

#### END PROMPT_CUSTOMIZATION ####

#### PROMPT_DEFAULT ####
if [ -z "$pt_app_dir" ]; then
    pt_app_dir=$(dirname $BASH_SOURCE)
fi
. $pt_app_dir/prompt-functions.env

if [ -z $nocolor_theme ]; then
    nocolor_theme=ubuntu-nocolor
fi
if [ -z $color_root_theme ]; then
    color_root_theme=ubuntu-color-root
fi
if [ -z $color_user_theme ]; then
    color_user_theme=ubuntu-color-user
fi

if [ -z $force_color_prompt ]; then
    force_color_prompt=no
fi
if [ -z $title_pwd ]; then
    title_pwd='\\w'
fi
#### END PROMPT_DEFAULT ####

#### MODIFIED_STUFF_FROM_UBUNTU_BASHRC ####
# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm|xterm-color|*-256color) color_prompt=yes;;
esac

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    if [[ ${EUID} == 0 ]] ; then
        theme=$color_root_theme
    else
        theme=$color_user_theme
    fi
else
    theme=$nocolor_theme
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h ${title_pwd}\a\]$PS1"
    ;;
*)
    ;;
esac

#### END MODIFIED_STUFF_FROM_UBUNTU_BASHRC ####

#### EXECUTION_AND_CLEANUP ####
pt_ps1=$($pt_app_dir/prompt-theme.py -t ${pt_app_dir}/prompt-themes/${theme}.json)
if [ ! -z "$pt_ps1" ]; then
   export PS1=$pt_ps1
fi

unset -v pt_ps1
unset -v pipeline
unset -v theme
unset -v title_pwd
unset -v nocolor_theme
unset -v color_user_theme
unset -v color_root_theme

#### END EXECUTION_AND_CLEANUP ####
